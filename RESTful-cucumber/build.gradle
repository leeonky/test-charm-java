buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE'
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.5.2'
    }
    ext {
        repoName = "git config --get remote.origin.url".execute().getText()
        projectName = "basename -s .git ${repoName}".execute().getText().trim()
    }
}

def dep(p, version) {
    return (gradle.ext.has('projects') && gradle.projects.contains(p)) ? project(p) : "com.github.leeonky${p}:${version}"
}

plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.2'
    id 'de.marcphilipp.nexus-publish' version '0.2.0'
}

jacoco {
    toolVersion = "0.8.2"
}

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'info.solidsoft.pitest'

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

group = 'com.github.leeonky'
version = '0.0.21' + System.env.VERSION_SCOPE
sourceCompatibility = 1.8

jacocoTestReport {
    reports {
        xml.enabled = true // for coveralls
        html.enabled = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.cucumber:cucumber-java:6.10.4'
    implementation dep(':DAL-java', '0.5.1')
    implementation dep(':DAL-extension-basic', '0.0.16')
    implementation dep(':jfactory', '0.3.23')
    implementation dep(':jfactory-cucumber', '0.1.31')

    testImplementation 'org.mock-server:mockserver:5.11.2'
    testImplementation 'org.mock-server:mockserver-netty:5.11.2'
    testImplementation "io.cucumber:cucumber-picocontainer:5.1.1"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.3'
    testImplementation 'org.projectlombok:lombok:1.18.12'
    testImplementation 'org.assertj:assertj-core:3.15.0'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.3'
    testImplementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'

    pitest 'io.github.wmaarts:pitest-mutation-testing-elements-plugin:0.3.1'
}

test {
    useJUnitPlatform()
}

task testAll(type: Test) {
    useJUnitPlatform()
    filter {
        setExcludePatterns("RestfulStepPatchTest", "RunCucumber")
    }
    jvmArgs = ['--illegal-access=deny']
}

task testPatch(type: Test) {
    useJUnitPlatform()
    filter {
        includeTestsMatching "RestfulStepPatchTest"
    }
    jvmArgs = ['--illegal-access=deny', '--add-opens', 'java.base/java.net=ALL-UNNAMED']
}

pitest {
    targetClasses = ['com.github.leeonky.cucumber.restful*']
    outputFormats = ['HTML2']
    junit5PluginVersion = "0.12"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = projectName
            from(components.java)
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = projectName
                description = projectName
                url = 'https://github.com/leeonky/' + projectName

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'leeonky'
                        name = 'Liangchen'
                        email = 'leeonky@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/leeonky/' + projectName + '.git'
                    developerConnection = 'scm:git:git@github.com:leeonky' + projectName + '.git'
                    url = 'https://github.com/leeonky/' + projectName + '.git'
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

nexusPublishing {
    username = System.env.ossrhUsername
    password = System.env.ossrhPassword
}

task currentVersion {
    doLast {
        println project.version
    }
}

tasks.coveralls {
    dependsOn jacocoTestReport
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'com.github.leeonky.cucumber.restful', 'src/test/resources']
        }
    }
}

task cucumberAll() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'com.github.leeonky.cucumber.restful', 'src/test/resources/features']
            jvmArgs = ['--illegal-access=deny']
        }
    }
}

task cucumberPatch() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'com.github.leeonky.cucumber.restful', 'src/test/resources/patch_features']
            jvmArgs = ['--illegal-access=deny', '--add-opens', 'java.base/java.net=ALL-UNNAMED']
        }
    }
}
