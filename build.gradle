buildscript {
    ext {
        versions = [
                project: 'beta-ci-0.0.2',
                test   : [
                        junit            : '5.3.1',
                        assertj          : '3.21.0',
                        mockito          : '4.0.0',
                        dal              : '0.2.0-beta',
                        dalExtensionBasic: '0.0.2',
                        lombok           : '1.18.4',
                        cucumber         : '6.10.4',
                        jackson          : '2.13.1',
                        jsonassert       : '1.5.0',
                        pitest           : '1.6.0'
                ]
        ]
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "info.solidsoft.gradle.pitest:gradle-pitest-plugin:${versions.test.pitest}"
    }
}

plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.2'
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
}

task currentVersion {
    doLast {
        println versions.project
    }
}

group = 'com.github.leeonky'

nexusPublishing {
    repositories {
        sonatype {
            username = System.env.ossrhUsername
            password = System.env.ossrhPassword
        }
    }
}

subprojects {
    ext {
        projectName = project.projectDir.name

        configCucumber = { glues ->
            dependencies {
                testImplementation "io.cucumber:cucumber-java:${versions.test.cucumber}"
            }

            configurations {
                cucumberRuntime {
                    extendsFrom testImplementation
                }
            }

            test {
                test {
                    systemProperty("cucumber.publish.quiet", true)
                    useJUnitPlatform {
                        excludeTags("disabled")
                    }
                }
            }

            cucumberArgs = ['--plugin', 'pretty']
            for (glue in glues) {
                cucumberArgs.add('--glue')
                cucumberArgs.add(glue)
            }
            cucumberArgs.add('src/test/resources/features')

            task cucumber() {
                dependsOn assemble, testClasses
                doLast {
                    javaexec {
                        environment('CUCUMBER_PUBLISH_QUIET', true)
                        main = "io.cucumber.core.cli.Main"
                        classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
                        args = cucumberArgs
                    }
                }
            }
        }
    }

    jacoco {
        toolVersion = "0.8.2"
    }

    apply plugin: 'java'
    apply plugin: 'signing'
    apply plugin: 'maven-publish'
    apply plugin: 'jacoco'
    apply plugin: 'com.github.kt3k.coveralls'

    task javadocJar(type: Jar, dependsOn: classes) {
        classifier 'javadoc'
        from javadoc.destinationDir
    }

    task sourcesJar(type: Jar, dependsOn: javadoc) {
        classifier 'sources'
        from sourceSets.main.allSource
    }

    group = 'com.github.leeonky'
    version = versions.project
    sourceCompatibility = 1.8

    jacocoTestReport {
        reports {
            xml.enabled = true // for coveralls
            html.enabled = true
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.test.junit}"
        testImplementation "org.junit.jupiter:junit-jupiter-params:${versions.test.junit}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.test.junit}"

        testImplementation "org.mockito:mockito-inline:${versions.test.mockito}"

        testImplementation "org.assertj:assertj-core:${versions.test.assertj}"

        testAnnotationProcessor "org.projectlombok:lombok:${versions.test.lombok}"
        testCompile "org.projectlombok:lombok:${versions.test.lombok}"
    }

    test {
        test {
            systemProperty("cucumber.publish.quiet", true)
            useJUnitPlatform {
                excludeTags("disabled")
            }
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = projectName
                from(components.java)
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = projectName
                    description = projectName
                    url = 'https://github.com/leeonky/test-charm-java/' + projectName

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'leeonky'
                            name = 'Liangchen'
                            email = 'leeonky@gmail.com'
                        }
                    }

                    scm {
                        connection = 'scm:git:https://github.com/leeonky/test-charm-java.git'
                        developerConnection = 'scm:git:git@github.com:leeonky/test-charm-java.git'
                        url = 'https://github.com/leeonky/test-charm-java.git'
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }

    tasks.coveralls {
        dependsOn jacocoTestReport
    }

    def enablePitest = { name, target, excluded ->
        if (projectName == name) {
            project.apply plugin: 'info.solidsoft.pitest'

            project.dependencies {
                pitest "io.github.wmaarts:pitest-mutation-testing-elements-plugin:0.3.1"
            }

            project.pitest {
                targetClasses = target
                excludedClasses = excluded
                outputFormats = ['HTML2']
                pitestVersion = '1.6.9'
                threads = 8
                junit5PluginVersion = "0.12"
            }
        }
    }

//    enablePitest('bean-util', ['com.github.leeonky.util.*'], [])
//    enablePitest('DAL-java', ['com.github.leeonky.dal.*'], ['com.github.leeonky.dal.spec.*', 'com.github.leeonky.dal.runtime.Schema'])
}

task mergedTestReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    reportOn subprojects*.test
}

task test {
    finalizedBy mergedTestReport
}
